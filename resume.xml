<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
<channel>
<item>
  <title>Ruby 2.0.0-p0 is released</title>
  <description>
  <p>We are pleased to announce the release of Ruby 2.0.0-p0.</p><p>Ruby 2.0.0 is the first stable release of the Ruby 2.0 series, with many new features and improvements in response to the increasingly diverse and expanding demands for Ruby.</p><p>Enjoy programming with Ruby 2.0.0!</p> <h2><a name="label-0" id="label-0">Download</a></h2><!-- RDLabel: "Download" --><ul> <li><p><a href="ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.tar.bz2">&lt;URL:ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.tar.bz2&gt;</a></p> <pre>SIZE: 10814890 bytes MD5: 895c1c581f8d28e8b3bb02472b2ccf6a SHA256: c680d392ccc4901c32067576f5b474ee186def2fcd3fcbfa485739168093295f</pre></li> <li><p><a href="ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.tar.gz">&lt;URL:ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.tar.gz&gt;</a></p> <pre>SIZE: 13608925 bytes MD5: 50d307c4dc9297ae59952527be4e755d SHA256: aff85ba5ceb70303cb7fb616f5db8b95ec47a8820116198d1c866cc4fff151ed</pre></li> <li><p><a href="ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.zip">&lt;URL:ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.zip&gt;</a></p> <pre>SIZE: 15037340 bytes MD5: db5af5d6034646ad194cbdf6e50f49ee SHA256: 0d0af6a9c8788537efd8d7d2358ce9468e6e2b7703dacba9ebd064d8b7da5f99</pre></li> </ul><h2><a name="label-1" id="label-1">What is Ruby 2.0.0</a></h2><!-- RDLabel: "What is Ruby 2.0.0" --><h3><a name="label-2" id="label-2">New Features</a></h3><!-- RDLabel: "New Features" --><p>Some of the highlights:</p><ul> <li>Language core features <ul> <li>Keyword arguments, which give flexibility to API design</li> <li>Module#prepend, which is a new way to extend a class</li> <li>A literal %i, which creates an array of symbols easily</li> <li>__dir__, which returns the dirname of the file currently being executed</li> <li>The UTF-8 default encoding, which make many magic comments omissible</li> </ul></li> <li>Built-in libraries <ul> <li>Enumerable#lazy and Enumerator::Lazy, for (possibly infinite) lazy stream</li> <li>Enumerator#size and Range#size, for lazy size evaluation</li> <li>#to_h, which is a new convention for conversion to Hash</li> <li>Onigmo, which is a new regexp engine (a fork of Oniguruma)</li> <li>Asynchronous exception handling API</li> </ul></li> <li>Debug support <ul> <li>DTrace support, which enables run-time diagnosis in production</li> <li>TracePoint, which is an improved tracing API</li> </ul></li> <li>Performance improvements <ul> <li>GC optimization by bitmap marking</li> <li>Kernel#require optimization which makes Rails startup very fast</li> <li>VM optimization such as method dispatch</li> <li>Float operation optimization</li> </ul></li> </ul><p>In addition, albeit as an experimental feature, 2.0.0 includes Refinements, which adds a new concept to Ruby's modularity.</p><p>See also NEWS for more features, improvements and details.</p><h3><a name="label-3" id="label-3">Compatibility</a></h3><!-- RDLabel: "Compatibility" --><p>We have also taken care with the 2.0.0 design to make it compatible with 1.9. It will be easier to migrate from 1.9 to 2.0 than it was from 1.8 to 1.9. (The notable incompatibilities are described later.)</p><p>In fact, thanks to the dedicated work of third parties, some popular applications such as Rails and tDiary have been reported to work on the release candidate version of 2.0.0.</p><h3><a name="label-4" id="label-4">Documentation</a></h3><!-- RDLabel: "Documentation" --><p>We have also made documentation improvements which many rubyists have requested. We have added a huge amount of rdoc for modules and methods. 2.0.0 will be around 75% documented while 1.9.3 was about 60%. Also, we have added a description of Ruby's syntax. You can see:</p><pre>ri ruby:syntax</pre><h3><a name="label-5" id="label-5">Stability</a></h3><!-- RDLabel: "Stability" --><p>Note that unlike 1.9.0, 2.0.0 IS a stable release, even though its TEENY is 0. All library authors are strongly recommended to support 2.0.0. As mentioned above, it will be comparatively easy to migrate from 1.9 to 2.0.</p><p>Ruby 2.0.0 is ready for practical use, and will absolutely improve your Ruby life.</p><h2><a name="label-6" id="label-6">Notes</a></h2><!-- RDLabel: "Notes" --><h3><a name="label-7" id="label-7">Introductory articles</a></h3><!-- RDLabel: "Introductory articles" --><p>Here are some introductory articles of 2.0.0 features by third parties:</p><ul> <li><a href="http://blog.marc-andre.ca/2013/02/23/ruby-2-by-example">&lt;URL:http://blog.marc-andre.ca/2013/02/23/ruby-2-by-example&gt;</a> (comprehensive, recommended)</li> <li><a href="https://speakerdeck.com/shyouhei/whats-new-in-ruby-2-dot-0">&lt;URL:https://speakerdeck.com/shyouhei/whats-new-in-ruby-2-dot-0&gt;</a> (comprehensive, recommended)</li> <li><a href="http://el.jibun.atmarkit.co.jp/rails/2012/11/ruby-20-8256.html">&lt;URL:http://el.jibun.atmarkit.co.jp/rails/2012/11/ruby-20-8256.html&gt;</a> (brief, in Japanese)</li> <li><a href="https://speakerdeck.com/nagachika/rubyist-enumeratorlazy">&lt;URL:https://speakerdeck.com/nagachika/rubyist-enumeratorlazy&gt;</a> (only Enumerator::Lazy, in Japanese)</li> </ul><p>The following articles are also helpful, but outdated with regards to refinement:</p><ul> <li><a href="http://rubysource.com/a-look-at-ruby-2-0/">&lt;URL:http://rubysource.com/a-look-at-ruby-2-0/&gt;</a></li> <li><a href="https://speakerdeck.com/a_matsuda/ruby-2-dot-0-on-rails">&lt;URL:https://speakerdeck.com/a_matsuda/ruby-2-dot-0-on-rails&gt;</a></li> <li><a href="http://globaldev.co.uk/2012/11/ruby-2-0-0-preview-features/">&lt;URL:http://globaldev.co.uk/2012/11/ruby-2-0-0-preview-features/&gt;</a></li> <li><a href="http://www.infoq.com/news/2012/11/ruby-20-preview1">&lt;URL:http://www.infoq.com/news/2012/11/ruby-20-preview1&gt;</a></li> </ul><p>Also, the recent issue of "Rubyist Magazine" includes some articles that were written by the feature authors themselves for introducing some new 2.0.0 features.</p><ul> <li><a href="http://jp.rubyist.net/magazine/?0041-200Special">&lt;URL:http://jp.rubyist.net/magazine/?0041-200Special&gt;</a></li> </ul><p>Though they will be written in Japanese, English translations are planned for the future.</p><h3><a name="label-8" id="label-8">Incompatibility</a></h3><!-- RDLabel: "Incompatibility" --><p>There are five notable incompatibilities we know of:</p><ul> <li>The default encoding for ruby scripts is now UTF-8 [#6679]. Some people report that it affects existing programs, such as some benchmark programs becoming very slow [ruby-dev:46547].</li> <li>Iconv was removed, which had already been deprecated when M17N was introduced in ruby 1.9. Use String#encode, etc. instead.</li> <li>There is ABI breakage [ruby-core:48984]. We think that normal users can/should just reinstall extension libraries. You should be aware: DO NOT COPY .so OR .bundle FILES FROM 1.9.</li> <li>#lines, #chars, #codepoints, #bytes now returns an Array instead of an Enumerator [#6670]. This change allows you to avoid the common idiom "lines.to_a". Use #each_line, etc. to get an Enumerator.</li> <li>Object#inspect does always return a string like #&lt;ClassName:0x...&gt; instead of delegating to #to_s. [#2152]</li> </ul><p>There are some comparatively small incompatibilities. [ruby-core:49119]</p><h3><a name="label-9" id="label-9">Status of Refinements</a></h3><!-- RDLabel: "Status of Refinements" --><p>We have added a feature called Refinements, which adds a new concept to Ruby's modularity. However, please be aware that Refinements is still an experimental feature: we may change its specification in the future. Despite that, we would like you to play with it and give us your thoughts. Your feedback will help to forge this interesting feature.</p><h2><a name="label-10" id="label-10">Acknowledgment</a></h2><!-- RDLabel: "Acknowledgment" --><p>A great many people contributed to 2.0.0. Even an incomplete acknowledgment for only a few parts of contributions became too big to insert here. Sorry but let me just add a link to the special thanks page.</p><ul> <li><a href="http://bugs.ruby-lang.org/projects/ruby/wiki/200SpecialThanks">&lt;URL:http://bugs.ruby-lang.org/projects/ruby/wiki/200SpecialThanks&gt;</a></li> </ul><p>Thank you all!</p>
  </description>
  <pubDate>Sun, 24 Feb 2013 09:06:22 GMT</pubDate>
  <guid>
  http://www.ruby-lang.org/en/news/2013/02/24/ruby-2-0-0-p0-is-released/
  </guid>
  <link>
  http://www.ruby-lang.org/en/news/2013/02/24/ruby-2-0-0-p0-is-released/
  </link>
</item>
<item>
  <title>Ruby 1.9.3-p392 is released</title>
  <description>
  <p>Now Ruby 1.9.3-p392 is released. I apologize for updating too frequently.</p><p>This release includes security fixes about bundled JSON and REXML.</p><ul> <li><a href="http://www.ruby-lang.org/en/news/2013/02/22/json-dos-cve-2013-0269/">Denial of Service and Unsafe Object Creation Vulnerability in JSON (CVE-2013-0269)</a></li> <li><a href="http://www.ruby-lang.org/en/news/2013/02/22/rexml-dos-2013-02-22/">Entity expansion DoS vulnerability in REXML (XML bomb)</a></li> </ul><p>And some small bugfixes are also included.</p><p>See <a href="https://bugs.ruby-lang.org/projects/ruby-193/issues?set_filter=1&amp;status_id=5">tickets</a> and <a href="http://svn.ruby-lang.org/repos/ruby/tags/v1_9_3_392/ChangeLog">ChangeLog</a> for details.</p> <h2><a name="label-0" id="label-0">Download</a></h2><!-- RDLabel: "Download" --><p>You can download this release from:</p><ul> <li><p><a href="ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.bz2">&lt;URL:ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.bz2&gt;</a></p> <pre>SIZE: 10024221 bytes MD5: a810d64e2255179d2f334eb61fb8519c SHA256: 5a7334dfdf62966879bf539b8a9f0b889df6f3b3824fb52a9303c3c3d3a58391</pre></li> <li><p><a href="ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz">&lt;URL:ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz&gt;</a></p> <pre>SIZE: 12557294 bytes MD5: f689a7b61379f83cbbed3c7077d83859 SHA256: 8861ddadb2cd30fb30e42122741130d12f6543c3d62d05906cd41076db70975f</pre></li> <li><p><a href="ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.zip">&lt;URL:ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.zip&gt;</a></p> <pre>SIZE: 13863402 bytes MD5: 212fb3bc41257b41d1f8bfe0725916b7 SHA256: f200ce4a63ce57bea64028a507350717c2a16bdbba6d9538bc69e9e7c2177c8b</pre></li> </ul><h2><a name="label-1" id="label-1">Release Comment</a></h2><!-- RDLabel: "Release Comment" --><p>Many committers, testers and users who gave bug reports helped me to make this release. Thanks for their contributions.</p>
  </description>
  <pubDate>Fri, 22 Feb 2013 13:09:05 GMT</pubDate>
  <guid>
  http://www.ruby-lang.org/en/news/2013/02/22/ruby-1-9-3-p392-is-released/
  </guid>
  <link>
  http://www.ruby-lang.org/en/news/2013/02/22/ruby-1-9-3-p392-is-released/
  </link>
</item>
<item>
  <title>
  Entity expansion DoS vulnerability in REXML (XML bomb)
  </title>
  <description>
  <p>Unrestricted entity expansion can lead to a DoS vulnerability in REXML. (The CVE identifier will be assigned later.) We strongly recommend to upgrade ruby.</p> <h2><a name="label-0" id="label-0">Details</a></h2><!-- RDLabel: "Details" --><p>When reading text nodes from an XML document, the REXML parser can be coerced in to allocating extremely large string objects which can consume all of the memory on a machine, causing a denial of service.</p><p>Impacted code will look something like this:</p><pre>document = REXML::Document.new some_xml_doc document.root.text</pre><p>When the `text` method is called, entities will be expanded. An attacker can send a relatively small XML document that, when the entities are resolved, will consume extreme amounts of memory on the target system.</p><p>Note that this attack is similar to, but different from the Billion Laughs attack. This is also related to CVE-2013-1664 of Python.</p><p>All users running an affected release should either upgrade or use one of the work arounds immediately.</p><h2><a name="label-1" id="label-1">Workarounds</a></h2><!-- RDLabel: "Workarounds" --><p>If you cannot upgrade Ruby, use this monkey patch as a workaround:</p><pre>class REXML::Document @@entity_expansion_text_limit = 10_240 def self.entity_expansion_text_limit=( val ) @@entity_expansion_text_limit = val end def self.entity_expansion_text_limit @@entity_expansion_text_limit end end class REXML::Text def self.unnormalize(string, doctype=nil, filter=nil, illegal=nil) sum = 0 string.gsub( /\r\n?/, "\n" ).gsub( REFERENCE ) { s = self.expand($&amp;, doctype, filter) if sum + s.bytesize &gt; REXML::Document.entity_expansion_text_limit raise "entity expansion has grown too large" else sum += s.bytesize end s } end def self.expand(ref, doctype, filter) if ref[1] == ?# if ref[2] == ?x [ref[3...-1].to_i(16)].pack('U*') else [ref[2...-1].to_i].pack('U*') end elsif ref == '&amp;amp;' '&amp;' elsif filter and filter.include?( ref[1...-1] ) ref elsif doctype doctype.entity( ref[1...-1] ) or ref else entity_value = DocType::DEFAULT_ENTITIES[ ref[1...-1] ] entity_value ? entity_value.value : ref end end end</pre><p>This monkey patch will limit the size of the entity substitutions to 10k per node. REXML already defaults to only allow 10000 entity substitutions per document, so the maximum amount of text that can be generated by entity substitution will be around 98 megabytes.</p><h2><a name="label-2" id="label-2">Affected versions</a></h2><!-- RDLabel: "Affected versions" --><ul> <li>All ruby 1.9 versions prior to ruby 1.9.3 patchlevel 392</li> <li>All ruby 2.0 versions prior to ruby 2.0.0 patchlevel 0</li> <li>prior to trunk revision 39384</li> </ul><h2><a name="label-3" id="label-3">Credits</a></h2><!-- RDLabel: "Credits" --><p>Thanks to Ben Murphy for reporting this issue.</p><h2><a name="label-4" id="label-4">History</a></h2><!-- RDLabel: "History" --><ul> <li>Originally published at 2013-02-22 12:00:00 (UTC)</li> </ul>
  </description>
  <pubDate>Fri, 22 Feb 2013 13:08:51 GMT</pubDate>
  <guid>
  http://www.ruby-lang.org/en/news/2013/02/22/rexml-dos-2013-02-22/
  </guid>
  <link>
  http://www.ruby-lang.org/en/news/2013/02/22/rexml-dos-2013-02-22/
  </link>
</channel>
</item>
</rss>